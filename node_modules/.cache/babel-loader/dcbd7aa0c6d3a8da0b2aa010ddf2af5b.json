{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ninad Sinha\\\\Google Drive\\\\fund_website_2\\\\NimittaTestRepo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ninad Sinha\\\\Google Drive\\\\fund_website_2\\\\NimittaTestRepo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Ninad Sinha\\\\Google Drive\\\\fund_website_2\\\\NimittaTestRepo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Ninad Sinha\\\\Google Drive\\\\fund_website_2\\\\NimittaTestRepo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./App.css';/* DATA ITEMS\r\n\tlistOfItems: array type. Contains name of elements to access,\r\n\telementWidth: container width,\r\n\tcircleRadius: radius of button circles,\r\n\tcircleGap: spacing between circles,\r\n\tcallBackFunction: callback on click of button\r\n\titemClicked: currently selected item\r\n*/var SideNav=/*#__PURE__*/function(_Component){_inherits(SideNav,_Component);var _super=_createSuper(SideNav);function SideNav(props){var _this;_classCallCheck(this,SideNav);_this=_super.call(this,props);_this.state={};return _this;}_createClass(SideNav,[{key:\"componentWillMount\",value:function componentWillMount(){document.addEventListener('wheel',function(event){});}},{key:\"componentDidMount\",value:function componentDidMount(){debugger;var itemList=document.getElementsByTagName('circle');itemList[this.props.itemClicked].classList.add('buttonSelectedColor');}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var itemList=document.getElementsByTagName('circle');Array.from(itemList).forEach(function(item){item.classList.add('buttonNotSelectedColor');item.classList.remove('buttonSelectedColor');});itemList[this.props.itemClicked].classList.remove('buttonNotSelectedColor');itemList[this.props.itemClicked].classList.add('buttonSelectedColor');}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"svg\",{width:\"\".concat(this.props.circleRadius*2+10,\"px\"),height:\"\".concat(this.props.listOfItems.length*(2*this.props.circleRadius+this.props.circleGap),\"px\")},this.props.listOfItems.map(function(element,index){return/*#__PURE__*/React.createElement(\"circle\",{fill:'grey',key:index,\"data-id\":index,cx:\"50%\",cy:\"\".concat((2*_this2.props.circleRadius+_this2.props.circleGap)*index+_this2.props.circleRadius,\"px\"),r:_this2.props.circleRadius,onClick:function onClick(event){// this.setState({ itemClicked: index });\n_this2.props.callBackFunction(event,index);}});})));}}]);return SideNav;}(Component);export default SideNav;","map":{"version":3,"sources":["C:/Users/Ninad Sinha/Google Drive/fund_website_2/NimittaTestRepo/src/sideNav.js"],"names":["React","Component","SideNav","props","state","document","addEventListener","event","itemList","getElementsByTagName","itemClicked","classList","add","Array","from","forEach","item","remove","circleRadius","listOfItems","length","circleGap","map","element","index","callBackFunction"],"mappings":"ovBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CAEA;;;;;;;KAUMC,CAAAA,O,kGACL,iBAAYC,KAAZ,CAAmB,yCAClB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,EAAb,CAFkB,aAIlB,C,mFAEoB,CACpBC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,SAACC,KAAD,CAAW,CAAG,CAAjD,EACA,C,6DAEmB,CACnB,SACA,GAAIC,CAAAA,QAAQ,CAAGH,QAAQ,CAACI,oBAAT,CAA8B,QAA9B,CAAf,CACAD,QAAQ,CAAC,KAAKL,KAAL,CAAWO,WAAZ,CAAR,CAAiCC,SAAjC,CAA2CC,GAA3C,CAA+C,qBAA/C,EACA,C,+DAEoB,CACpB,GAAIJ,CAAAA,QAAQ,CAAGH,QAAQ,CAACI,oBAAT,CAA8B,QAA9B,CAAf,CACAI,KAAK,CAACC,IAAN,CAAWN,QAAX,EAAqBO,OAArB,CAA6B,SAACC,IAAD,CAAU,CACtCA,IAAI,CAACL,SAAL,CAAeC,GAAf,CAAmB,wBAAnB,EACAI,IAAI,CAACL,SAAL,CAAeM,MAAf,CAAsB,qBAAtB,EACA,CAHD,EAIAT,QAAQ,CAAC,KAAKL,KAAL,CAAWO,WAAZ,CAAR,CAAiCC,SAAjC,CAA2CM,MAA3C,CAAkD,wBAAlD,EACAT,QAAQ,CAAC,KAAKL,KAAL,CAAWO,WAAZ,CAAR,CAAiCC,SAAjC,CAA2CC,GAA3C,CAA+C,qBAA/C,EACA,C,uCAIQ,iBACR,mBACC,4CACC,2BACC,KAAK,WAAK,KAAKT,KAAL,CAAWe,YAAX,CAA0B,CAA1B,CAA8B,EAAnC,MADN,CAEC,MAAM,WAAK,KAAKf,KAAL,CAAWgB,WAAX,CAAuBC,MAAvB,EAAiC,EAAK,KAAKjB,KAAL,CAAWe,YAAhB,CAAgC,KAAKf,KAAL,CAAWkB,SAA5E,CAAL,MAFP,EAIE,KAAKlB,KAAL,CAAWgB,WAAX,CAAuBG,GAAvB,CAA2B,SAACC,OAAD,CAAUC,KAAV,CAAoB,CAC9C,mBAAO,8BAAQ,IAAI,CAAE,MAAd,CACN,GAAG,CAAEA,KADC,CAEN,UAASA,KAFH,CAGN,EAAE,MAHI,CAIN,EAAE,WAAK,CAAC,EAAK,MAAI,CAACrB,KAAL,CAAWe,YAAhB,CAAgC,MAAI,CAACf,KAAL,CAAWkB,SAA5C,EAA0DG,KAA1D,CAAmE,MAAI,CAACrB,KAAL,CAAWe,YAAnF,MAJI,CAKN,CAAC,CAAE,MAAI,CAACf,KAAL,CAAWe,YALR,CAMN,OAAO,CAAE,iBAACX,KAAD,CAAW,CACnB;AACA,MAAI,CAACJ,KAAL,CAAWsB,gBAAX,CAA4BlB,KAA5B,CAAmCiB,KAAnC,EACA,CATK,EAAP,CAWA,CAZD,CAJF,CADD,CADD,CAuBA,C,qBArDoBvB,S,EAsDpB,cAAeC,CAAAA,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css'\r\n\r\n/* DATA ITEMS\r\n\tlistOfItems: array type. Contains name of elements to access,\r\n\telementWidth: container width,\r\n\tcircleRadius: radius of button circles,\r\n\tcircleGap: spacing between circles,\r\n\tcallBackFunction: callback on click of button\r\n\titemClicked: currently selected item\r\n*/\r\n\r\n\r\nclass SideNav extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tdocument.addEventListener('wheel', (event) => { })\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdebugger;\r\n\t\tlet itemList = document.getElementsByTagName('circle');\r\n\t\titemList[this.props.itemClicked].classList.add('buttonSelectedColor');\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tlet itemList = document.getElementsByTagName('circle');\r\n\t\tArray.from(itemList).forEach((item) => {\r\n\t\t\titem.classList.add('buttonNotSelectedColor');\r\n\t\t\titem.classList.remove('buttonSelectedColor');\r\n\t\t})\r\n\t\titemList[this.props.itemClicked].classList.remove('buttonNotSelectedColor');\r\n\t\titemList[this.props.itemClicked].classList.add('buttonSelectedColor');\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t< div >\r\n\t\t\t\t<svg\r\n\t\t\t\t\twidth={`${this.props.circleRadius * 2 + 10}px`}\r\n\t\t\t\t\theight={`${this.props.listOfItems.length * (2 * (this.props.circleRadius) + this.props.circleGap)}px`}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.listOfItems.map((element, index) => {\r\n\t\t\t\t\t\t\treturn <circle fill={'grey'}\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tdata-id={index}\r\n\t\t\t\t\t\t\t\tcx={`50%`}\r\n\t\t\t\t\t\t\t\tcy={`${(2 * (this.props.circleRadius) + this.props.circleGap) * (index) + this.props.circleRadius}px`}\r\n\t\t\t\t\t\t\t\tr={this.props.circleRadius}\r\n\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t// this.setState({ itemClicked: index });\r\n\t\t\t\t\t\t\t\t\tthis.props.callBackFunction(event, index);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}></circle>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</svg>\r\n\t\t\t</div >\r\n\t\t)\r\n\t}\r\n} export default SideNav;"]},"metadata":{},"sourceType":"module"}